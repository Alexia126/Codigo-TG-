############ Script final desarrollo pasantía#######

###1 Procedimientos exploratorios generelaes (Descriptivos)


###2 Cuantificación de la DT dada la CV y ZA 
TXY<-read.csv("Matriz INEXT DT XY (CSV).csv",header = T, row.names =NULL) [,-1]

HTXY<-iNEXT(TXY, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

HTXYG<- ggiNEXT(HTXY, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Hill por CV y AL")
HTXYG

HTXYA<- ggiNEXT(HTXY, type=2, facet.var="order", color.var="site") +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva de acumulación") 
HTXYA ### Acumulación

HTXYC<-ggiNEXT(HTXY, type=3, facet.var="order", color.var="site")  +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva basada en la cobertura 95%")  
HTXYC ### Cobertura
 
HTXYR<-HTXY$AsyEst
RTHXT<-write.table(x = HTXYR, file = "Indices HDF.csv", sep = ",", 
                   row.names = TRUE, col.names = TRUE)



###3 Cuantificación de la DF dada la CV y ZA
FXY<-read.csv("Matriz INEXT DF XY (CSV).csv",header = T, row.names =NULL) [,-1]

HFXY<-iNEXT(FXY, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

HFXYG<- ggiNEXT(HFXY, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Hill por CV y AL")
HFXYG

HFXYA<- ggiNEXT(HFXY, type=2, facet.var="order", color.var="site") +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva de acumulación") 

HFXYA ### Acumulación

HFXYC<-ggiNEXT(HFXY, type=3, facet.var="order", color.var="site")  +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva basada en la cobertura 95%")  
HFXYC ### Cobertura

HFXYR<-HFXY$AsyEst
RFHXT<-write.table(x = HFXYR, file = "Indices HDT.csv", sep = ",", 
            row.names = TRUE, col.names = TRUE)


###4 Estadísticos para selección de prueba comparación por grupos

##### Datos para DT
IDT<-read.csv("Valores Índices H DT (CSV).csv")
head(IDT)
View(IDT)
levels(IDT$Cobertura.vegetal)
levels(IDT$Zona.altitudinal)
as.factor(IDT$Cobertura.vegetal)
as.factor(IDT$Zona.altitudinal)

##### Datos para DF
IDF<-read.csv("Valores Índices H DF (CSV).csv")
head(IDF)
View(IDF)
levels(IDF$Cobertura.vegetal)
levels(IDF$Zona.altitudinal)
as.factor(IDF$Cobertura.vegetal)
as.factor(IDF$Zona.altitudinal)

### Resumen gráfico

boxplot(IDF$Riqueza~IDF$Cobertura.vegetal)
boxplot(IDF$Riqueza~IDF$Zona.altitudinal)

boxplot(IDF$Hill.Shannon~IDF$Cobertura.vegetal)
boxplot(IDF$Hill.Shannon~ID$Zona.altitudinal)

boxplot(IDF$Hill.Simpson~IDF$Cobertura.vegetal)
boxplot(IDF$Hill.Simpson~IDF$Zona.altitudinal)

              #########################
boxplot(IDT$Riqueza~IDT$Cobertura.vegetal)
boxplot(IDT$Riqueza~IDT$Zona.altitudinal)

boxplot(IDT$Hill.Shannon~IDT$Cobertura.vegetal)
boxplot(IDT$Hill.Shannon~IDT$Zona.altitudinal)

boxplot(IDT$Hill.Simpson~IDT$Cobertura.vegetal)
boxplot(IDT$Hill.Simpson~IDT$Zona.altitudinal)

plot(density(IDT$Riqueza))
plot(density(IDT$Hill.Simpson))

### 4A Normalidad 

### N<50 = Shapiro

shapiro.test(x = IDT$Riqueza)
shapiro.test(x = IDT$Hill.Shannon)
shapiro.test(x = IDT$Hill.Simpson)

shapiro.test(x = IDF$Riqueza)
shapiro.test(x = IDF$Hill.Shannon)
shapiro.test(x = IDF$Hill.Simpson)
####### No normal


### 4B Homocedasticidad 

leveneTest(IDT$Riqueza~IDT$Cobertura.vegetal)
leveneTest(IDT$Riqueza~IDT$Zona.altitudinal)

leveneTest(IDT$Hill.Shannon~IDT$Cobertura.vegetal)
leveneTest(IDT$Hill.Shannon~IDT$Zona.altitudinal)

leveneTest(IDT$Hill.Simpson~IDT$Cobertura.vegetal)
leveneTest(IDT$Hill.Simpson~IDT$Zona.altitudinal)

######## No homocedastico

###5 Prueba comparación de medianas por grupos

### 5A Kruskal-Wallis

###  Riqueza 

KWTR0CV<-kruskal.test(IDT$Riqueza ~IDT$Cobertura.vegetal)
KWTR0CV ##### Si diferencia p-value = 0.2251 
KWTR0ZA<-kruskal.test(IDT$Riqueza ~IDT$Zona.altitudinal)
KWTR0ZA #### No diferencia p-value = 0.002471

KWFR0CV<-kruskal.test(IDF$Riqueza ~IDF$Cobertura.vegetal)
KWFR0CV 

KWFR0ZA<-kruskal.test(IDF$Riqueza ~IDF$Zona.altitudinal)
KWFR0ZA 

### Hill-Shannon

KWTHS1CV<-kruskal.test(IDT$Hill.Shannon ~IDT$Cobertura.vegetal)
KWTHS1CV ##### Si diferencia p-value = 0.1208
KWTHS1ZA<-kruskal.test(IDT$Hill.Shannon ~IDT$Zona.altitudinal)
KWTHS1ZA #### Si diferencia p-value = 0.04099

KWFHS1CV<-kruskal.test(IDF$Hill.Shannon ~IDF$Cobertura.vegetal)
KWFHS1CV ##### Si diferencia p-value = 0.3543
KWFHS1ZA<-kruskal.test(IDF$Hill.Shannon ~IDF$Zona.altitudinal)
KWFHS1ZA #### Si diferencia p-value = 0.6928

#### Hill-Simpson 

KWTHS2CV<-kruskal.test(IDT$Hill.Simpson ~IDT$Cobertura.vegetal)
KWTHS2CV ### No hay p-value = 0.05309
KWTHS2ZA<-kruskal.test(IDT$Hill.Simpson ~IDT$Zona.altitudinal)
KWTHS2ZA #### No hay p-value = 0.002842

KWFHS2CV<-kruskal.test(IDF$Hill.Simpson ~IDF$Cobertura.vegetal)
KWFHS2CV ### Si hay p-value = 0.33
KWFHS2ZA<-kruskal.test(IDF$Hill.Simpson ~IDF$Zona.altitudinal)
KWFHS2ZA #### Si hay  p-value = 0.5489

########## Post-hoc 

### Riqueza 

### DT vs CV y ZA

pairwise.wilcox.test(x = IDT$Riqueza, g = IDT$Cobertura.vegetal, p.adjust.method = "holm" ) 

pairwise.wilcox.test(x = IDT$Riqueza, g = IDT$Zona.altitudinal, p.adjust.method = "holm" ) ### Todos son diferentes 

### DF vs CV y ZA

pairwise.wilcox.test(x = IDF$Riqueza, g = IDF$Cobertura.vegetal, p.adjust.method = "holm" ) ### Todos son diferentes 

pairwise.wilcox.test(x = IDF$Riqueza, g = IDF$Zona.altitudinal, p.adjust.method = "holm" ) ### Todos son diferentes 

### HShannon 

### DT vs CV y ZA

pairwise.wilcox.test(x = IDT$Hill.Shannon, g = IDT$Cobertura.vegetal, p.adjust.method = "holm" ) ### Todos son diferentes 

pairwise.wilcox.test(x = IDT$Hill.Shannon, g = IDT$Zona.altitudinal, p.adjust.method = "holm" ) ### Tropical y andina no son diferentes

### DF vs CV y ZA

pairwise.wilcox.test(x = IDF$Hill.Shannon, g = IDF$Cobertura.vegetal, p.adjust.method = "holm" ) ### Todos son diferentes 

pairwise.wilcox.test(x = IDF$Hill.Shannon, g = IDF$Zona.altitudinal, p.adjust.method = "holm" ) ### Todos son diferentes 

### HSimpson

### DT vs CV y ZA

pairwise.wilcox.test(x = IDT$Hill.Simpson, g = IDT$Zona.altitudinal, p.adjust.method = "holm" ) ### Todos son diferentes 

pairwise.wilcox.test(x = IDT$Hill.Simpson, g = IDT$Cobertura.vegetal, p.adjust.method = "holm" ) ### Todos son diferentes 

### DF vs CV y ZA

pairwise.wilcox.test(x = IDF$Hill.Simpson, g = IDF$Zona.altitudinal, p.adjust.method = "holm" ) ### Todos son diferentes 

pairwise.wilcox.test(x = IDF$Hill.Simpson, g = IDF$Cobertura.vegetal, p.adjust.method = "holm" ) ### Todos son diferentes 

###6 Correlación entre índices 

### 6A Ajuste a la linealidad 

ggplot(IDT, aes(sample = IDT$Riqueza))+
  stat_qq() + stat_qq_line() ### No lineal

ggplot(IDT, aes(sample = IDT$Hill.Shannon))+
  stat_qq() + stat_qq_line() ### No lineal

ggplot(IDT, aes(sample = IDT$Hill.Simpson))+
  stat_qq() + stat_qq_line() ### No lineal

######

ggplot(IDF, aes(sample = IDF$Riqueza))+
  stat_qq() + stat_qq_line() ### Casi, outliers

ggplot(IDF, aes(sample = IDF$Hill.Shannon))+
  stat_qq() + stat_qq_line() ### Casi, outliers

ggplot(IDF, aes(sample = IDF$Hill.Simpson))+
  stat_qq() + stat_qq_line() ### Casi, outliers

### 6B Pruebas

### Correlación de rangos de Kendall y Coeficiente de Tau

cor.test(y = IDF$Riqueza, x =IDT$Riqueza, 
         method = "kendall")### No asociación ordinal p-value = 0.0002512,  tau = 0.3851543 

cor.test(y = IDF$Hill.Shannon,x = IDT$Hill.Shannon, 
         method = "kendall")### No asociación ordinal p-value = 0.0005259,      tau = 0.3617794

cor.test(y = IDF$Hill.Simpson,x = IDT$Hill.Simpson, 
         method = "kendall")### Si hay asociación ordinal p-value = 0.009029, tau = 0.2747935

### Correlación producto momento de Sperman / Coeficiente de Rho

cor.test(y = IDF$Riqueza, x =IDT$Riqueza, 
         method = "spearman")### No asociación ordinal p-value = 5.795e-05, rho =0.5624266

cor.test(y = IDF$Hill.Shannon,x = IDT$Hill.Shannon, 
         method = "spearman")### No asociación ordinal p-value = 0.000195, rho =0.5277421

cor.test(y = IDF$Hill.Simpson,x = IDT$Hill.Simpson, 
         method = "spearman")### Si hay asociación ordinal p-value = 0.02734, rho = 0.3289843

### Regresión lineal y representación gráfica 

R0<- lm(IDF$Riqueza_Funcional~IDT$Riqueza_Taxonómica)
summary(R0) ### No linealidad modelo no muy bien ajustado  
R0G<-ggplot(IDT, aes(x=Riqueza_Taxonómica , y=IDF$Riqueza_Funcional)) +
  geom_point(shape=1) +   
  geom_smooth(method=lm) +
  ggtitle ("Regresión lineal entre RF y RT") +
  labs(x = "Riqueza taxonómica (RT)",y = "Riqueza funcional (RF)")
R0G

HS1<- lm(IDF$Hill.Shannon~IDT$Hill.Shannon)
HS1G<-ggplot(IDT, aes(x=IDT$Hill.Shannon, y=IDF$Hill.Shannon)) +
  geom_point(shape=1) +    
  geom_smooth(method=lm)+
  ggtitle ("Regresión lineal entre Hill-Shannon funcional y taxonómico") +
  labs(x = "Hill-Shannon taxonómico",y = "Hill-Shannon funcional")
HS1G
summary(HS1)### No linealidad modelo no muy bien ajustado  

HS2<- lm(IDF$Hill.Simpson~IDT$Hill.Simpson)
HS2G<-ggplot(IDT, aes(x=IDT$Hill.Simpson, y=IDF$Hill.Simpson)) +
  geom_point(shape=1) +    
  geom_smooth(method=lm)+
  ggtitle ("Regresión lineal entre Hill-Simpson funcional y taxonómico") +
  labs(x = "Hill-Simpson taxonómico",y = "Hill-Simpson funcional")
HS2G
summary(HS2) ### No linealidad modelo mejor ajustado

### 7 Otros análisis 

### 7A Conteo y distribución de abundancias 

### Para DT

AGDT<-read.csv("Matriz abundancia DTXY (CSV).csv")

### Por cobertura vegetal 

ADTCV<-ggplot(AGDT, aes(fill=AGDT$Cobertura.vegetal, y=Abundancia, x=Morfoespecie)) +
  geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0))+ ylab("Abundancia (ind/especie)") + labs(fill="Cobertura vegetal")

ADTCV

### Por zona altitudinal

ADTZA<-ggplot(AGDT, aes(fill=Zona.altitudinal, y=Abundancia, x=Morfoespecie)) +
  geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0))+ ylab("Abundancia (ind/especie)") + labs(fill="Zona altitudinal")

ADTZA


### Para DF

AGDF<-read.csv("Matriz abundancia DFXY (CSV).csv")

### Por cobertura vegetal 

ADFCV<-ggplot(AGDF, aes(fill=Cobertura.vegetal, y=Abundancia, x=Rasgos)) +
  geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0))+ ylab("Abundancia (ind/rasgo)") + labs(fill="Cobertura vegetal")

ADFCV

### Por zona altitudinal

ADFZA<-ggplot(AGDF, aes(fill=Zona.altitudinal, y=Abundancia, x=Rasgos)) +
  geom_bar(stat="identity") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 0))+ ylab("Abundancia (ind/rasgo)") + labs(fill="Zona altitudinal")

ADFZA

###8 Revisión de gráficas 

### Curvas Hill general DT


CAcuDTGen<-read.csv("INEXT CAcu DT Gen (CSV).csv",header = T, row.names =NULL) [,-1]
View(CAcuDTGen) ### Matriz General

GenDT<-iNEXT(CAcuDTGen, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50) ### Calculo

GraAcuDTGenA<- ggiNEXT(GenDT, type=2, facet.var="order", color.var="site") +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva de acumulación") 
GraAcuDTGen ### Acumulación por abundancia

GraAcuDTGenI<-ggiNEXT(GenDT, type=3, facet.var="order", color.var="site")  +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva basada en la cobertura 95%")
GraAcuDTGenI ### Calculo por método 95% cobertura

GraGenHC<- ggiNEXT(GenDT, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Muestreo general")

GraGenHC ### Hill calculado completo 

### Curvas Hill por ZA

CAcuDTZA<-read.csv("INEXT CAcu DT ZA (CSV) .csv",header = T, row.names =NULL) [,-1] ### ZA

ZADT<-iNEXT(CAcuDTZA, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraAcuDTZAA<- ggiNEXT(ZADT, type=2, facet.var="order", color.var="site") +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva de acumulación Abundancia") 
GraAcuDTZAA ### Acumulación por abundancia

GraAcuDTZAI<-ggiNEXT(ZADT, type=3, facet.var="order", color.var="site")  +    theme_bw()+ theme(legend.position="bottom") + ggtitle("Curva basada en la cobertura 95%")
GraAcuDTZAI ### Calculo por método 95% cobertura metodo incidencias

GraZAHC<- ggiNEXT(ZADT, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Diversidad calculada por zona altitudinal") ### Hill calculado completo 
GraZAHC

#### Calculos por ZA dada la CV

### Andina 

DTZAAnd<-read.csv("INEXT Indices And DT (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Andina

ZADTAnd<-iNEXT(DTZAAnd, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHCAnd<- ggiNEXT(ZADTAnd, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Andina") ### Hill calculado completo 
GraZAHCAnd

### Sub Andina 

DTZASAnd<-read.csv("INEXT Indices SAnd DT (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Sub Andina

ZADTSAnd<-iNEXT(DTZASAnd, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHCSAnd<- ggiNEXT(ZADTSAnd, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Sub Andina") ### Hill calculado completo 
GraZAHCSAnd

### Tropical 

DTZATro<-read.csv("INEXT Indices Tro DT (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Tropical

ZADTTro<-iNEXT(DTZATro, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHCTro<- ggiNEXT(ZADTTro, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Tropical") ### Hill calculado completo 
GraZAHCTro

#### Curvas DF por ZA

### Andina 

DFZAAnd<-read.csv("INEXT And DF (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Andina

ZADFAnd<-iNEXT(DFZAAnd, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHFCAnd<- ggiNEXT(ZADFAnd, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Andina") ### Hill calculado completo 
GraZAHFCAnd

### Sub Andina 

DFZASAnd<-read.csv("INEXT SAnd DF (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Sub Andina

ZADFSAnd<-iNEXT(DFZASAnd, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHFCSAnd<- ggiNEXT(ZADFSAnd, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Sub Andina") ### Hill calculado completo 
GraZAHFCSAnd

### Tropical 

DFZATro<-read.csv("INEXT Tro DF (CSV).csv",header = T, row.names =NULL) [,-1] ### ZA Tropical

ZADFTro<-iNEXT(DFZATro, q= c(0,1,2) , datatype="abundance", size=NULL, endpoint=NULL, knots=40, se=TRUE, conf=0.95, nboot=50)

GraZAHFCTro<- ggiNEXT(ZADFTro, type=1, facet.var="order", color.var="site") +   theme_bw()+ theme(legend.position="bottom") + ggtitle("Tropical") ### Hill calculado completo 
GraZAHFCTro

#######8 Distribución DT Y DF

### 8A Diagramas de Venn para distribución DT

#### Para Zonas altitudinales

MorfosZA<-list('Andina'=c("Apis mellifera", "Eulaema meriana cf","Halictini sp.3","Megachile sp.1","Meliponini sp.3", "Oxytrigona daemonica cf", "Plebeia sp.2", "Sphecidae sp.1", "Temnosoma sp.2"),'Sub Andina'=c("Apis mellifera","Augochlorini sp.1","Augochlorini sp.2", "Bombus atratus", "Bombus sp.1", "Euglossa sp. 2", "Halictini sp.2", "Melipona beecheii cf","Melipona nigrescens","Meliponini sp.1", "Meliponini sp.2", "Meliponini sp.3", "Meliponini sp.3", "Meliponini sp.4", "Meliponini sp.7","Meliponini sp.8", "Meliponini sp.9", "Oxytrigona sp.1", "Parapartamona sp.1", "Paratrigona eutaeniata cf", "Paratrigona ornaticeps cf", "Paratrigona rinconi cf", "Partamona peckolti cf","Plebeia sp.1", "Plebeia sp.2", "Plebeia sp.2", "Protandrena sp.1", "Scaptotrigona pectoralis cf", "Scaptotrigona sp.1","Scaptotrigona sp.2", "Trigona fulviventris","Xylocopa sp. 1"),'Tropical'= c("Agapostemon sp.1","Anthodioctes costaricensis cf", "Anthoporini sp. 1", "Anthoporini sp. 2", "Anthoporini sp. 3", "Augochlorini sp.3", "Cephalotrigona sp.1", "Cephalotrigona sp.2", "Cephalotrigona sp.3", "Cephalotrigona zexmeniae", "Eucerini sp. 1", "Euglossa sp. 1", "Euglossa sp. 2", "Euglossa sp. 3", "Eulaema meriana cf", "Halictini sp.1", "Melipona beecheii cf", "Melipona sp.1", "Meliponini sp.1", "Meliponini sp.2", "Meliponini sp.3","Meliponini sp.5", "Meliponini sp.6", "Neocorynura sp.1 cf", "Oxytrigona daemonica cf", "Oxytrigona mellicolor cf", "Oxytrigona sp.1", "Parapartamona sp.1", "Partamona musarum cf",  "Partamona peckolti cf",  "Partamona sp.1","Plebeia sp.1", "Plebeia sp.2", "Plebeia sp.3", "Scaptotrigona pectoralis cf", "Scaptotrigona sp.1", "Scaptotrigona sp.2", "Scaptotrigona suboscuripennis cf", "Scaura sp.1",  "Temnosoma sp.1", "Temnosoma sp.2", "Tetragona perangulata cf", "Tetragonisca angustula", "Trigona fulviventris ", "Trigona sp.1",  "Trigonisca sp.1"))

ggvenn(MorfosZA)###### GGVenn

ggVennDiagram(MorfosZA)######### ggVennDiagram 

######## Para CV teniendo en cuenta la zona 

##### Zona Andina 

MorfosAnd<-list('Boscosa'=c("Apis mellifera", "Meliponini sp.3","Megachile sp.1"), 'Arbustiva'=c("Eulaema meriana cf","Temnosoma sp.2", "Sphecidae sp.1"),'Herbácea'=c("Oxytrigona daemonica cf","Plebeia sp.2", "Halictini sp.3" ) )

ggvenn(MorfosAnd)
ggVennDiagram(MorfosAnd)

##### Zona Sub Andina 

MorfosSAnd<-list('Boscosa'=c("Protandrena sp.1","Apis mellifera","Bombus atratus","Bombus sp.1","Euglossa sp. 2","Melipona beecheii cf","Melipona nigrescens ","Meliponini sp.2","Meliponini sp.3","Meliponini sp.4","Meliponini sp.7","Meliponini sp.8","Meliponini sp.9","Oxytrigona sp.1","Parapartamona sp.1","Paratrigona eutaeniata cf","Paratrigona ornaticeps cf","Paratrigona rinconi cf","Partamona peckolti cf","Plebeia sp.1","Plebeia sp.2","Scaptotrigona pectoralis cf","Scaptotrigona sp.1","Scaptotrigona sp.2","Trigona fulviventris ","Augochlorini sp.1","Augochlorini sp.2","Augochlorini sp.2","Cephalotrigona sp.3"), 'Arbustiva'=c("Cephalotrigona sp.3","Trigona fulviventris ","Xylocopa sp. 1"),'Herbácea'=c("Meliponini sp.1","Scaptotrigona pectoralis cf","Scaptotrigona sp.2","Trigona fulviventris ","Xylocopa sp. 1","Halictini sp.2"))

ggvenn(MorfosSAnd)
ggVennDiagram(MorfosSAnd)

####### Zona Tropical

MorfosTro<-list('Boscosa'=c("Anthoporini sp. 2","Eucerini sp. 1","Euglossa sp. 1","Euglossa sp. 2","Euglossa sp. 3","Eulaema meriana cf","Cephalotrigona sp.3","Cephalotrigona zexmeniae","Melipona beecheii cf","Melipona sp.1","Meliponini sp.1","Meliponini sp.2","Meliponini sp.3","Meliponini sp.5","Meliponini sp.6","Oxytrigona daemonica cf","Oxytrigona mellicolor cf","Oxytrigona sp.1","Parapartamona sp.1","Partamona musarum cf","Partamona peckolti cf","Plebeia sp.2","Scaptotrigona pectoralis cf","Scaptotrigona sp.1","Scaptotrigona sp.2","Scaura sp.1","Tetragona perangulata cf","Tetragonisca angustula","Trigona fulviventris ","Trigona sp.1","Trigonisca sp.1 ","Temnosoma sp.1","Temnosoma sp.2","Agapostemon sp.1","Anthodioctes costaricensis cf"), 'Arbustiva'=c("Anthoporini sp. 1","Euglossa sp. 1","Euglossa sp. 2","Eulaema meriana cf","Cephalotrigona sp.1","Cephalotrigona sp.2","Cephalotrigona sp.3","Melipona beecheii cf","Meliponini sp.1","Oxytrigona mellicolor cf","Partamona sp.1","Plebeia sp.1","Plebeia sp.2","Plebeia sp.3","Scaptotrigona pectoralis cf","Scaptotrigona sp.1","Scaptotrigona sp.2","Scaura sp.1","Trigona fulviventris ","Neocorynura sp.1 cf","Halictini sp.1","Halictini sp.1","Augochlorini sp.3"),'Herbácea'=c("Anthoporini sp. 3","Augochlorini sp.3","Euglossa sp. 3","Cephalotrigona zexmeniae","Melipona beecheii cf","Scaptotrigona sp.1","Scaptotrigona suboscuripennis cf","Trigona fulviventris ","Temnosoma sp.1"))

ggvenn(MorfosTro)
ggVennDiagram(MorfosTro)
